server:
  port: 8001

auth:
  config:
    client:
      id: auth-id
      secret : EHbpsTwTBR78!KXZUkK
    key:
      public: secretkey

security:
  oauth2:
    resource:
      filter-order: 3

spring:
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: create
  datasource:
    url: jdbc:postgresql://localhost:5432/temperature_project
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:7070/oauth2/redirect